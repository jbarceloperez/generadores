%SAES_HEADER%

%DOC_QTCBCPP_FILE%

#include "%NAME%QtCb.h"
#include "ui_%NAME%.h"

#include <QRegularExpression>
#include <QRegularExpressionValidator>

class %NAME%QtCb::PrivateData
{
    public:
        %DOC_QTCBCPP_PDATA_CONSTRUCTOR%
        PrivateData(BaseClass* parent)
        {

        }
        %DOC_QTCBCPP_PDATA_DESTRUCTOR%
        ~PrivateData()
        {}      
        %DOC_QTCBCPP_PDATA_UI%
        Ui::%NAME% ui;
};


%NAME%QtCb::%NAME%QtCb(BaseClass * parent)
    : BaseClass(parent)
    , p_impl(new PrivateData(parent))
{
    p_impl->ui.setupUi(this);

    initialize();

    signalsAndSlots();

}

%NAME%QtCb::~%NAME%QtCb()
{

}
//----------------------------------------------------------------
void %NAME%QtCb::init()
{
    const ParameterLimitData* limit = exportGetParameterLimit();
    if(limit)
    {

    }
}
//----------------------------------------------------------------
void %NAME%QtCb::initialize()
{   
    %ADD_FOOTER_BUTTON_APPLY%
    %ADD_FOOTER_BUTTON_CANCEL%
    %ADD_FOOTER_BUTTON_RESET%
    %ADD_FOOTER_BUTTON_CUSTOM1%
    %ADD_FOOTER_BUTTON_CUSTOM2%

    addComponents(p_impl->ui.layoutBase);
}

//----------------------------------------------------------------
void %NAME%QtCb::signalsAndSlots()
{

}

%PANEL_CHECK_CPP%
%PANEL_APPLY_CPP%
%PANEL_CANCEL_CPP%
%PANEL_RESET_CPP%
%PANEL_CUSTOM1_CPP%
%PANEL_CUSTOM2_CPP%
//--------------------------------------------------------------------------------------------

